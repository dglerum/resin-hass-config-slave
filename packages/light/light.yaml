#################################################################
#                          Script                               #
#################################################################
#
homeassistant:
  customize:
    light.fibaro_kitchen_level:
      friendly_name: Kitchen
    light.fibaro_table_level:
      friendly_name: Table
    light.fibaro_hallway_level:
      friendly_name: Hallway
    light.fibaro_stair_level:
      friendly_name: Stair
    switch.wemo_livingroom:
      friendly_name: TV Lights

group:
  lights:
    name: Lights
    view: no
    control: hidden
    entities:
      - light.hue_desk
      - light.hue_lightstrip
      - light.hue_livingroom
      - switch.wemo_livingroom
      - light.fibaro_kitchen_level
      - light.fibaro_table_level
      - light.fibaro_hallway_level
      - light.fibaro_stair_level

switch:

  - platform: template
    switches:
      dinner_lights:
        friendly_name: Dinner Lights
        value_template: "{{ is_state('light.fibaro_kitchen_dimmer_level', 'on') and is_state('light.fibaro_table_dimmer_level', 'on') }}"
        turn_on:
          service: scene.turn_on
          entity_id: scene.dinner_on
        turn_off:
          service: scene.turn_on
          entity_id: scene.dinner_off

      kitchen_lights:
        friendly_name: Kitchen Lights
        value_template: "{{ is_state('light.hue_desk', 'on') }}"
        turn_on:
          service: script.lighting_script
          data_template:
            message: 'on'
            entity_id: light.hue_desk
        turn_off:
          service: script.lighting_script
          data_template:
            message: 'off'
            entity_id: light.hue_desk

      table_lights:
        friendly_name: Table Lights
        value_template: "{{ is_state('light.fibaro_table_dimmer_level', 'on') }}"
        turn_on:
          service: scene.turn_on
          entity_id: scene.table_on
        turn_off:
          service: scene.turn_on
          entity_id: scene.table_off

      # desk_light:
      #   friendly_name: Desk Light
      #   value_template: "{{ is_state('light.hue_desk', 'on') }}"
      #   turn_on:
      #     service: scene.turn_on
      #     entity_id: scene.desk_on
      #   turn_off:
      #     service: scene.turn_on
      #     entity_id: scene.desk_off

      tv_lights:
        friendly_name: TV Lights
        value_template: "{{ is_state('group.Livingroom', 'on') }}"
        turn_on:
          service: scene.turn_on
          entity_id: scene.livingroom_on
        turn_off:
          service: scene.turn_on
          entity_id: scene.livingroom_off

script:
  # Master script for ALL LIGHTS OFF
  # Turns off all with clean up for milight
  # Also turns off additional items via-sub scripts
  #  * group.tracked_users = not_home
  #    * turn off Alexa, bathroom fan, bandwidth throttling
  #  * roku = playing
  #    * turn off grow light, aquarium, bathroom_fan
  lighting_script:
    alias: Lightning Script
    sequence:
      - service_template: >
          light.turn_{{ message }}
        entity_id: {{ entity_id }}

      # - service_template: >
      #     {%- if {{ message }} == 'on' -%}
      #       light.turn_on
      #     {%- else -%}
      #       light.turn_off
      #     {%- endif -%}
      #   entity_id: light.hue_desk

  everything_off:
    alias: Good Night
    sequence:

      - service: homeassistant.turn_off
        entity_id: switch.wemo_livingroom

      - service: light.turn_off
        data:
          entity_id: light.fibaro_table_dimmer_level, light.hue_livingroom, light.hue_lightstrip, light.hue_desk
          transition: 4

      - delay: '00:00:02'

      - condition: state
        entity_id: light.fibaro_kitchen_dimmer_level
        state: 'on'

      - service: light.turn_on
        data:
          entity_id: light.fibaro_kitchen_dimmer_level
          brightness: 75
          transition: 5

      - delay: '00:00:07'

      - service: light.turn_off
        data:
          entity_id: light.fibaro_kitchen_dimmer_level
          transition: 4
  #
  #     # NOT HOME
  #     # If I'm not home, TTS tell Alexa to shut up.
  #     # Turn off bandwidth restrictions
  #     - service: script.turn_on
  #       entity_id: script.everything_off_not_home
  #     # MEDIA PLAYING
  #     # Turn off additional lights
  #     - service: script.turn_on
  #       entity_id: script.everything_off_movietime
  #
  #     # LAST STEP: CLEAN UP MILIGHTS
  #     - delay: '00:00:07'
  #     # HA does not see these state changes, they go direct to hub
  #     - service: script.turn_on
  #       entity_id: script.milight_front_off
  #     - delay: '00:00:01'
  #     - service: script.turn_on
  #       entity_id: script.milight_back_off
  #     - delay: '00:00:01'
  #     - service: script.turn_on
  #       entity_id: script.milight_front_off
  #     - delay: '00:00:01'
  #     - service: script.turn_on
  #       entity_id: script.milight_back_off
  # #
  # # SUB SCRIPTS
  # #
  # everything_off_not_home:
  #   alias: Not Home, Turn Off More Stuff
  #   sequence:
  #     - condition: state
  #       entity_id: group.tracked_users
  #       state: 'not_home'
  #
  #     - service: homeassistant.turn_off
  #       entity_id: switch.bathroom_fan, switch.transmission_turtle_mode, input_boolean.sabnzbd_turtle_mode
  #     - service: script.turn_on
  #       entity_id: script.tts_alexa_shut_up
  #
  # everything_off_movietime:
  #   alias: All Off, Movie Time
  #   sequence:
  #     - condition: state
  #       entity_id: media_player.roku_3__4124cg078650
  #       state: 'playing'
  #
  #     - service: homeassistant.turn_off
  #       entity_id: switch.grow_light, switch.aquarium, switch.bathroom_fan
